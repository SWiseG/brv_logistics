# Generated by Django 4.2.21 on 2025-06-15 05:47

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("analytics", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="salesreport",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="deleted_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="productperformance",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="deleted_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="productperformance",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="performance_metrics",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="customermetrics",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="deleted_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="customermetrics",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="metrics",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="analyticsevent",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="deleted_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="analyticsevent",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="salesreport",
            index=models.Index(
                fields=["report_date", "period_type"],
                name="analytics_s_report__87f135_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="salesreport",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["category_breakdown"], name="analytics_s_categor_0bc162_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="salesreport",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["payment_method_breakdown"],
                name="analytics_s_payment_62c249_gin",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="salesreport",
            unique_together={("report_date", "period_type")},
        ),
        migrations.AddIndex(
            model_name="productperformance",
            index=models.Index(
                fields=["product", "date"], name="analytics_p_product_f90fd1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productperformance",
            index=models.Index(
                fields=["date", "views_count"], name="analytics_p_date_d19201_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productperformance",
            index=models.Index(
                fields=["date", "revenue"], name="analytics_p_date_103190_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productperformance",
            unique_together={("product", "date")},
        ),
        migrations.AddIndex(
            model_name="customermetrics",
            index=models.Index(
                fields=["customer_tier"], name="analytics_c_custome_a1c3d3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customermetrics",
            index=models.Index(
                fields=["total_spent"], name="analytics_c_total_s_729dab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customermetrics",
            index=models.Index(
                fields=["last_purchase_date"], name="analytics_c_last_pu_cb8f6b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["user", "created_at"], name="analytics_a_user_id_ecb128_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["session_id", "created_at"],
                name="analytics_a_session_533ea7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["event_type", "created_at"],
                name="analytics_a_event_t_6c35be_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["event_data"], name="analytics_a_event_d_cc67ea_gin"
            ),
        ),
    ]
